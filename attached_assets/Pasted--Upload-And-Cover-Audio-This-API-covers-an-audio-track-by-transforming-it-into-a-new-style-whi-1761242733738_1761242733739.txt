# Upload And Cover Audio

> This API covers an audio track by transforming it into a new style while retaining its core melody. It incorporates Suno's upload capability, enabling users to upload an audio file for processing. The expected result is a refreshed audio track with a new style, keeping the original melody intact.

## OpenAPI

````yaml suno-api/suno-api.json post /api/v1/generate/upload-cover
paths:
  path: /api/v1/generate/upload-cover
  method: post
  servers:
    - url: https://api.kie.ai
      description: API Server
  request:
    security:
      - title: BearerAuth
        parameters:
          query: {}
          header:
            Authorization:
              type: http
              scheme: bearer
              description: >-
                All APIs require authentication via Bearer Token.


                Get API Key:

                1. Visit [API Key Management Page](https://kie.ai/api-key) to
                get your API Key


                Usage:

                Add to request header:

                Authorization: Bearer YOUR_API_KEY


                Note:

                - Keep your API Key secure and do not share it with others

                - If you suspect your API Key has been compromised, reset it
                immediately in the management page
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              uploadUrl:
                allOf:
                  - type: string
                    format: uri
                    description: >-
                      The URL for uploading audio files, required regardless of
                      whether customMode and instrumental are true or false.
                      Ensure the uploaded audio does not exceed 2 minutes in
                      length.
                    example: https://storage.example.com/upload
              prompt:
                allOf:
                  - type: string
                    description: >-
                      A description of the desired audio content.  

                      - In Custom Mode (`customMode: true`):  Required if
                      `instrumental` is `false`. The prompt will be strictly
                      used as the lyrics and sung in the generated track.
                      Character limits by model:  
                        - **V5**: Maximum 5000 characters  
                        - **V4_5PLUS & V4_5**: Maximum 5000 characters  
                        - **V3_5 & V4**: Maximum 3000 characters  
                        Example: "A calm and relaxing piano track with soft melodies"  
                      - In Non-custom Mode (`customMode: false`): Always
                      required. The prompt serves as the core idea, and lyrics
                      will be automatically generated based on it (not strictly
                      matching the input). Max length: 500 characters.  
                        Example: "A short relaxing piano tune" 
                    example: A calm and relaxing piano track with soft melodies
              style:
                allOf:
                  - type: string
                    description: >-
                      The music style or genre for the audio.  

                      - Required in Custom Mode (`customMode: true`). Examples:
                      "Jazz", "Classical", "Electronic". Character limits by
                      model:  
                        - **V5**: Maximum 1000 characters  
                        - **V4_5PLUS & V4_5**: Maximum 1000 characters  
                        - **V3_5 & V4**: Maximum 200 characters  
                        Example: "Classical"  
                      - In Non-custom Mode (`customMode: false`): Leave empty.
                    example: Classical
              title:
                allOf:
                  - type: string
                    description: >-
                      The title of the generated music track.  

                      - Required in Custom Mode (`customMode: true`). Character
                      limits by model:  
                        - **V5**: Maximum 100 characters  
                        - **V4_5PLUS & V4_5**: Maximum 100 characters  
                        - **V3_5 & V4**: Maximum 80 characters  
                        Example: "Peaceful Piano Meditation"  
                      - In Non-custom Mode (`customMode: false`): Leave empty.
                    example: Peaceful Piano Meditation
              customMode:
                allOf:
                  - type: boolean
                    description: >-
                      Enables Custom Mode for advanced audio generation
                      settings.  

                      - Set to `true` to use Custom Mode (requires `style` and
                      `title`; `prompt` required if `instrumental` is `false`).
                      The prompt will be strictly used as lyrics if
                      `instrumental` is `false`.  

                      - Set to `false` for Non-custom Mode (only `prompt` is
                      required). Lyrics will be auto-generated based on the
                      prompt.
                    example: true
              instrumental:
                allOf:
                  - type: boolean
                    description: >-
                      Determines if the audio should be instrumental (no
                      lyrics).  

                      - In Custom Mode (`customMode: true`):  
                        - If `true`: Only `style` and `title` are required.  
                        - If `false`: `style`, `title`, and `prompt` are required (with `prompt` used as the exact lyrics).  
                      - In Non-custom Mode (`customMode: false`): No impact on
                      required fields (`prompt` only). Lyrics are auto-generated
                      if `instrumental` is `false`.
                    example: true
              model:
                allOf:
                  - type: string
                    description: |-
                      The AI model version to use for generation.  
                      - Required for all requests.  
                      - Available options:  
                        - **`V5`**: Superior musical expression, faster generation.  
                        - **`V4_5PLUS`**: V4.5+ is richer sound, new waysto create, max 8 min.  
                        - **`V4_5`**: V4.5 is smarter prompts, fastergenerations, max 8 min.  
                        - **`V4`**: V4 is improved vocal quality,max 4 min.  
                        - **`V3_5`**: V3.5 is better song structure,max 4 min.
                    enum:
                      - V3_5
                      - V4
                      - V4_5
                      - V4_5PLUS
                      - V5
                    example: V3_5
              negativeTags:
                allOf:
                  - type: string
                    description: >-
                      Music styles or traits to exclude from the generated
                      audio.  

                      - Optional. Use to avoid specific styles.  
                        Example: "Heavy Metal, Upbeat Drums"
                    example: Heavy Metal, Upbeat Drums
              callBackUrl:
                allOf:
                  - type: string
                    format: uri
                    description: >-
                      The URL to receive audio covering task completion updates.
                      Required for all audio covering requests.


                      - System will POST task status and results to this URL
                      when audio covering completes

                      - Callback includes generated covered audio files with new
                      style while preserving original melody

                      - Your callback endpoint should accept POST requests with
                      JSON payload containing covered track results and audio
                      URLs

                      - For detailed callback format and implementation guide,
                      see [Audio Covering
                      Callbacks](./upload-and-cover-audio-callbacks)

                      - Alternatively, use the Get Music Details endpoint to
                      poll task status
                    example: https://api.example.com/callback
              vocalGender:
                allOf:
                  - type: string
                    description: >-
                      Vocal gender preference for the singing voice. Optional.
                      Use 'm' for male and 'f' for female. Note: This parameter
                      is only effective when customMode is true. Based on
                      practice, this parameter can only increase the probability
                      but cannot guarantee adherence to male/female voice
                      instructions.
                    enum:
                      - m
                      - f
                    example: m
              styleWeight:
                allOf:
                  - type: number
                    description: >-
                      Strength of adherence to the specified style. Optional.
                      Range 0â€“1, up to 2 decimal places.
                    minimum: 0
                    maximum: 1
                    multipleOf: 0.01
                    example: 0.65
              weirdnessConstraint:
                allOf:
                  - type: number
                    description: >-
                      Controls experimental/creative deviation. Optional. Range
                      0â€“1, up to 2 decimal places.
                    minimum: 0
                    maximum: 1
                    multipleOf: 0.01
                    example: 0.65
              audioWeight:
                allOf:
                  - type: number
                    description: >-
                      Balance weight for audio features vs. other factors.
                      Optional. Range 0â€“1, up to 2 decimal places.
                    minimum: 0
                    maximum: 1
                    multipleOf: 0.01
                    example: 0.65
            required: true
            requiredProperties:
              - uploadUrl
              - customMode
              - instrumental
              - callBackUrl
              - model
              - prompt
        examples:
          example:
            value:
              uploadUrl: https://storage.example.com/upload
              prompt: A calm and relaxing piano track with soft melodies
              style: Classical
              title: Peaceful Piano Meditation
              customMode: true
              instrumental: true
              model: V3_5
              negativeTags: Heavy Metal, Upbeat Drums
              callBackUrl: https://api.example.com/callback
              vocalGender: m
              styleWeight: 0.65
              weirdnessConstraint: 0.65
              audioWeight: 0.65
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              code:
                allOf:
                  - type: integer
                    enum:
                      - 200
                      - 401
                      - 402
                      - 404
                      - 409
                      - 422
                      - 429
                      - 451
                      - 455
                      - 500
                    description: >-
                      Response status code


                      - **200**: Success - Request has been processed
                      successfully

                      - **401**: Unauthorized - Authentication credentials are
                      missing or invalid

                      - **402**: Insufficient Credits - Account does not have
                      enough credits to perform the operation

                      - **404**: Not Found - The requested resource or endpoint
                      does not exist

                      - **409**: Conflict - WAV record already exists

                      - **422**: Validation Error - The request parameters
                      failed validation checks

                      - **429**: Rate Limited - Request limit has been exceeded
                      for this resource

                      - **451**: Unauthorized - Failed to fetch the image.
                      Kindly verify any access limits set by you or your service
                      provider.

                      - **455**: Service Unavailable - System is currently
                      undergoing maintenance

                      - **500**: Server Error - An unexpected error occurred
                      while processing the request
              msg:
                allOf:
                  - type: string
                    description: Error message when code != 200
                    example: success
              data:
                allOf:
                  - type: object
                    properties:
                      taskId:
                        type: string
                        description: Task ID for tracking task status
                        example: 5c79****be8e
        examples:
          example:
            value:
              code: 200
              msg: success
              data:
                taskId: 5c79****be8e
        description: Request successful
    '500':
      _mintlify/placeholder:
        schemaArray:
          - type: any
            description: Server Error
        examples: {}
        description: Server Error
  deprecated: false
  type: path
components:
  schemas: {}

````