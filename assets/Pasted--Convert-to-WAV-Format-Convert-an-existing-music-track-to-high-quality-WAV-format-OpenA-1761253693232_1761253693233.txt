# Convert to WAV Format

> Convert an existing music track to high-quality WAV format.

## OpenAPI

````yaml suno-api/suno-api.json post /api/v1/wav/generate
paths:
  path: /api/v1/wav/generate
  method: post
  servers:
    - url: https://api.kie.ai
      description: API Server
  request:
    security:
      - title: BearerAuth
        parameters:
          query: {}
          header:
            Authorization:
              type: http
              scheme: bearer
              description: >-
                All APIs require authentication via Bearer Token.


                Get API Key:

                1. Visit [API Key Management Page](https://kie.ai/api-key) to
                get your API Key


                Usage:

                Add to request header:

                Authorization: Bearer YOUR_API_KEY


                Note:

                - Keep your API Key secure and do not share it with others

                - If you suspect your API Key has been compromised, reset it
                immediately in the management page
          cookie: {}
    parameters:
      path: {}
      query: {}
      header: {}
      cookie: {}
    body:
      application/json:
        schemaArray:
          - type: object
            properties:
              taskId:
                allOf:
                  - type: string
                    description: >-
                      Unique identifier of the music generation task. This
                      should be a taskId returned from either the "Generate
                      Music" or "Extend Music" endpoints.
                    example: 5c79****be8e
              audioId:
                allOf:
                  - type: string
                    description: >-
                      Unique identifier of the specific audio track to convert.
                      This ID is returned in the callback data after music
                      generation completes.
                    example: e231****-****-****-****-****8cadc7dc
              callBackUrl:
                allOf:
                  - type: string
                    format: uri
                    description: >-
                      The URL to receive WAV conversion task completion updates.
                      Required for all WAV conversion requests.


                      - System will POST task status and results to this URL
                      when WAV conversion completes

                      - Callback includes the high-quality WAV file download URL

                      - Your callback endpoint should accept POST requests with
                      JSON payload containing the WAV file location

                      - For detailed callback format and implementation guide,
                      see [WAV Conversion Callbacks](./convert-to-wav-callbacks)

                      - Alternatively, use the Get WAV Details endpoint to poll
                      task status
                    example: https://api.example.com/callback
            required: true
            requiredProperties:
              - taskId
              - audioId
              - callBackUrl
        examples:
          example:
            value:
              taskId: 5c79****be8e
              audioId: e231****-****-****-****-****8cadc7dc
              callBackUrl: https://api.example.com/callback
  response:
    '200':
      application/json:
        schemaArray:
          - type: object
            properties:
              code:
                allOf:
                  - type: integer
                    enum:
                      - 200
                      - 400
                      - 401
                      - 402
                      - 404
                      - 409
                      - 422
                      - 429
                      - 455
                      - 500
                    description: >-
                      Response status code


                      - **200**: Success - Request has been processed
                      successfully

                      - **400**: Format Error - The parameter is not in a valid
                      JSON format.

                      - **401**: Unauthorized - Authentication credentials are
                      missing or invalid

                      - **402**: Insufficient Credits - Account does not have
                      enough credits to perform the operation

                      - **404**: Not Found - The requested resource or endpoint
                      does not exist

                      - **409**: Conflict - WAV record already exists

                      - **422**: Validation Error - The request parameters
                      failed validation checks

                      - **429**: Rate Limited - Request limit has been exceeded
                      for this resource

                      - **455**: Service Unavailable - System is currently
                      undergoing maintenance

                      - **500**: Server Error - An unexpected error occurred
                      while processing the request

                      Build Failed - Audio wav generation failed
              msg:
                allOf:
                  - type: string
                    description: Error message when code != 200
                    example: success
              data:
                allOf:
                  - type: object
                    properties:
                      taskId:
                        type: string
                        description: Task ID for tracking task status
                        example: 5c79****be8e
        examples:
          example:
            value:
              code: 200
              msg: success
              data:
                taskId: 5c79****be8e
        description: Request successful
    '500':
      _mintlify/placeholder:
        schemaArray:
          - type: any
            description: Server Error
        examples: {}
        description: Server Error
  deprecated: false
  type: path
components:
  schemas: {}

````